// Code generated by protoc-gen-go-micro-http. DO NOT EDIT.
//
// version:
// - protoc-gen-go-micro-http v1.0.0
// - protoc                   v3.21.7
//
// Proto source: echo.proto

package proto

import (
	"google.golang.org/grpc"

	"github.com/go-orb/go-orb/server"

	mhttp "github.com/go-orb/plugins/server/http"
)

// RegisterStreamsHTTPHandler registers the service to an HTTP server.
func RegisterStreamsHTTPHandler(srv *mhttp.ServerHTTP, handler StreamsServer) {
	r := srv.Router()
	r.Post("/user/debug/echo", mhttp.NewGRPCHandler(srv, handler.Call))
}

// RegisterStreamsHandler will return a registration function that can be
// provided to entrypoints as a handler registration.
func RegisterStreamsHandler(handler StreamsServer) server.RegistrationFunc {
	return server.RegistrationFunc(func(s any) {
		switch srv := any(s).(type) {
		case *mhttp.ServerHTTP:
			RegisterStreamsHTTPHandler(srv, handler)
		case grpc.ServiceRegistrar:
			// RegisterStreamsgRPCHandler(srv, handler)
		default:
			// Maybe we should log here with slog global logger
		}
	})
}
